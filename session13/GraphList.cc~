#include <iostream>
using namespace std;

class GraphList {
private:
  //in Java: Double.POSITIVE_INFINITY
    public static constexpr double INFINITY = 1.0 / 0.0;
  class Edge {
  public:
    int to;
    double w;
    Edge* next;
    Edge(int to, double w, Edge* next) : to(to), w(w), next(next) {}
  };
  Edge** edges;
public:
  GraphList(int V) {
    edges = new Edge*[V];
  }
  void setEdge(int i, int j, double w) {
    for (Edge* e = edges[i]; e != nullptr; e = e->next) {
      if (e->to == j) {
	e->w = w;
	return;
      }
    }
    edges[i] = new Edge(i,j, w, edges[i]); // addFirst
  }
  
  double adjacent(int  i, int j) {
    Edge* list = edges[i];
    if (list == nullptr)
      return INFINITY;
    for ( ; list != nullptr; list=list->next)
      if (list->to == j)
	return true;
    return false;

  }
};
