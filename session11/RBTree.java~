public class RBTree {
    private static class Node {
	int val;
	Node left, right, parent;
	bool red;
	public Node(Node left, Node right, Node parent, int val, boolean r) {
	    this.left = left; this.right = right; this.parent = parent; this.val = val;
	    red = r;
	}
    }
    Node root; // a binary tree is a pointer to root
    public RBTree() {
	root = null;
    }

    public void add(int v) {
	Node n = new Node(null, null, null, v);
	insert_recurse(root, n);
        // repair the tree in case any of the red-black properties have been violated
        insert_repair_tree(n);

 // find the new root to return
 root = n;
 while (parent(root) != NULL)
  root = parent(root);
 return n;
}

		    
}
